.property-purchase-container {
  font-family: Arial, sans-serif; /* or any other font-family */
}

.property-purchase-container .top-content {
  display: flex;
  justify-content: space-between;
  align-items: flex-start; /* This will align them at the top */
  gap: 20px; /* Adjust the space between the containers */
}

.property-purchase-container .table-container,
.property-purchase-container .map-container,
.property-purchase-container .chart-container {
  flex-basis: 25%; /* This will assign equal width if all have the same content, adjust as necessary */
  /* If you want them to be flexible based on content, you might consider `flex-grow` or `flex` shorthand */
}
.property-purchase-container .map-container{
  flex-basis: 50%;
}

/* If you have more specific design requirements, like fixed widths or responsive design, you might need to adjust the flex-basis values or use a combination of flex-grow, flex-shrink, and flex-basis. */
@media (max-width: 768px) {
  .property-purchase-container .top-content {
    flex-direction: column;
  }

  .property-purchase-container .table-container,
  .property-purchase-container .map-container,
  .property-purchase-container .chart-container {
    flex-basis: auto; /* Let them take the full width in a column layout */
  }
}

.form-container {
  margin-top: 20px;
}

.download-button-container {
  margin-top: 10px;
}

/* Buttons and form inputs */
button, input, select {
  padding: 10px;
  margin: 5px 0;
  border: 1px solid #ccc;
  border-radius: 4px;
}

button {
  background-color: #007bff;
  color: white;
  border: none;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #0056b3;
}
/* 
.map-container img {
  max-width: 100%;
  max-height: 100%;
  height: auto;
  width: auto;
} */

